1. Красно-черное дерево - задача зачтена

2. База данных - в целом все замечательно, задачу можно зачесть
   * Сортировка концептуально относится к механизму, а не интерфейсу (попала в интерфейсный модуль)
   * interface.c:438 лучше использовать round, т.к. постоянное отбрасывание дробной части накапливается
     (точнее: чтобы избежать проблемы, сами углы лучше считать в double, а округлять уже непосредственно при рисовании)
   * (этот пункт лучше исправить)
     При вызове street_insert не проверяется возвращаемое значение (ошибка realloc)
     При вызове street_delete realloc не происходит - оправдано ли это? Как будто сapacity массива остается прежней при удалении, но будет изменена под фактический размер при вставке? Даже если будет 10 удалений, а потом 1 вставка?
     При этом длина в этих функциях не изменяется - вероятно, было бы удобнее завести тип данных для базы, а не отдельно "таскать" массив и длину
     Кстати, большинство функций может на вход принимать const street *
     Также нет проверки возвращаемого значения input_name - вообще концептуально все корректно (база должна принять динамическую строку, а удаляется она автоматически), но это должно быть хорошо документировано.
     А вот free во многих местах - для ранее введенных имен файлов, для старого имени при редактировании и т.п. отсутствует
     

3. Матрицы - надо исправить

   * Есть утечка памяти, вот что сообщает valgrind:
   
   Матричная экспонента от
  1   0   0 

  0   2   0 

  0   0  -1 

Равна

2.71828   0   0 

  0 7.38899   0 

  0   0 0.367879 

==3966819== 
==3966819== HEAP SUMMARY:
==3966819==     in use at exit: 96 bytes in 2 blocks
==3966819==   total heap usage: 68 allocs, 66 frees, 17,257 bytes allocated
==3966819== 
==3966819== 96 (24 direct, 72 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==3966819==    at 0x484586F: malloc (vg_replace_malloc.c:381)
==3966819==    by 0x401483: matrix_alloc (matrix_c.c:12)
==3966819==    by 0x4017C2: matrix_alloc_identity (matrix_init.c:44)
==3966819==    by 0x403B3D: matrix_exp (matrix_problems.c:250)
==3966819==    by 0x401430: main (main.c:73)
==3966819== 
==3966819== LEAK SUMMARY:
==3966819==    definitely lost: 24 bytes in 1 blocks
==3966819==    indirectly lost: 72 bytes in 1 blocks
==3966819==      possibly lost: 0 bytes in 0 blocks
==3966819==    still reachable: 0 bytes in 0 blocks
==3966819==         suppressed: 0 bytes in 0 blocks
==3966819== 
==3966819== For lists of detected and suppressed errors, rerun with: -s
==3966819== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
   